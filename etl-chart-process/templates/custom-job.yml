apiVersion: batch/v1
kind: Job
metadata:
  name: job-{{ .Values.jobToRun }}
  namespace: {{ .Values.namespace }}
spec:
  backoffLimit: {{ .Values.etlJobs.backoffLimit }}
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: {{ .Values.jobToRun }}
          image: "{{ .Values.etlJobs.image }}:{{ .Values.etlJobs.tag }}"
          imagePullPolicy: {{ .Values.etlJobs.imagePullPolicy }}
          command: ["python3", "run_scraper.py"]
          args:
            - "--run_group"
            - "{{ .Values.runGroup }}"
            - "--run_name"
            - "{{ .Values.runName }}"
            - "--run_mode"
            - "{{ (index .Values.etlJobs.jobs .Values.jobToRun).runMode }}"
            {{- if eq .Values.jobToRun "extract" }}
            - "--max"
            - "{{ (index (index .Values.etlJobs.jobs "extract") "maxValue") }}"
            {{- else if eq .Values.jobToRun "transform" }}
            - "--limit_records"
            - "{{ (index (index .Values.etlJobs.jobs "transform") "limitValue") }}"
            {{- else if eq .Values.jobToRun "load" }}
            - "--destination"
            - "{{ (index (index .Values.etlJobs.jobs "load") "destination") }}"
            {{- end }}
          {{- if .Values.volume.enabled }}
          volumeMounts:
            - name: {{ .Values.volume.name }}
              mountPath: {{ .Values.volume.mountPath }}
          {{- end }}
      {{- if .Values.volume.enabled }}
      volumes:
        - name: {{ .Values.volume.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.volume.claimName }}
      {{- end }}
